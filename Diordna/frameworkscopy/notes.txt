=====单词
Scrap:废料
scrapped:报废
opaque:不透明
transient:短暂的
retrieve: 检索
correct: 正确的
Batch: 批处理



========View ViewGroup相关
1.调用forceLayout() 会设置标记PFLAG_FORCE_LAYOUT PFLAG_INVALIDATED 在下一次layout时会被layout,同时其isLayoutRequested()会返回true
2.ViewGroup.getChildMeasureSpec(int spec, int padding, int childDimension) 是方便的构建MeasureSpec的方法,
 用于在某个方向上去除padding后的空间都可以给一个子View的情况,如ListView的width
3.attachViewToParent 与 detachViewFromParent对应 都只是简单的改变ViewGroup mChildren[]数组
4.@hide ViewGroup.offsetChildrenTopAndBottom(int offset) 调整所有子view上下方向偏移offset
5.canScrollHorizontally canScrollVertically 及相关函数computeHorizontalScrollOffset computeHorizontalScrollRange computeHorizontalScrollExtent
    等可通过重写实现自己的是否可scroll逻辑判断，一般兼容性良好的ViewGroup子类会在触摸事件时(onInterceptTouchEvent)
    调用其子view的canScrollHorizontally(canScrollVertically) 来决定是否拦截触摸事件
6.performClick callOnClick 只需要触发事件应调用callOnClick
7.View.setWillNotDraw 设为true则不会调用onDraw()
8.View.setWillNotCacheDrawing 则不会建立DrawingCache 如ImageView
9.继承ViewGroup时可以考虑重写dispatchSetPressed 当调用setPressed会调用该方法，在该方法内决定是否调用子view 的setPressed
10.android:contentDescription 用于设置view的Description 用于findViewsWithText匹配查找
 
=======ListAdapter
areAllItemsEnabled() 是否所有item都selectable
isEnabled(int position) 可用于决定item是否有效 如item是否selectable item是否可触发click longClick


=======ListView
1.HeaderView FooterView 通过HeaderViewListAdapter包装原Adapter实现,对于ListView来说相当于普通item,
 对于HeaderView FooterView getItemId默认返回-1, getItemViewType默认返回AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER
2.DataSetObserver onChanged onInvalidated最终都会调用requestLayout();
3.ListView.getAdapter 返回的Adapter可能是HeaderViewListAdapter（有HeaderView或FooterView时）,对返回的Adapter操作时position要考虑Header Footer
4.通过AbsListView.LayoutParams 存储跟itemViewi相关的一些状态信息
5. 变量名 childrenTop值ListView可见区域的最顶部出去padding childrenBottom反之
6.setSelection(int position)  setSelectionFromTop(int position, int y) position 是包括HeaderView FooterView的
7.ListView滚动不是通过scroll实现，而是通过offsetChildrenTopAndBottom实现

============MotionEvent
1.MotionEvent.transform(Matrix matrix) 矩阵转化touchEvent的坐标 如果view在绘制的时候有一个转换则对事件也做一个转换可使时间仍旧对应
2.MotionEvent.toString()


=================PagerAdapter
1.PagerAdapter.getPageWidth(int position) 获取position处的item 宽度占ViewPager的比例
