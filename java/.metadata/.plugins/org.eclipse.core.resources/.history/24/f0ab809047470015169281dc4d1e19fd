package com.github.yinhangfeng.androiddocs;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.commons.io.FileUtils;

public class AndroidDocs {
	
	private static final Charset UTF8 = Charset.forName("UTF-8");
	private static ThreadPoolExecutor executor;
	private static final Pattern REPLACE_PATTERN
		= Pattern.compile("<script.+?src=\"http.+?>\\s*</script>|<script>\\s*?\\(function\\(i,s,o,g,r,a,m\\)[\\s\\S]+?</script>");
	private static ThreadLocal<StringBuffer> stringBufferLocal = new ThreadLocal<StringBuffer>() {
		@Override
		protected StringBuffer initialValue() {
			return new StringBuffer(4096);
		}
	};
	
	public static void main(String[] args) {
		
        String s = "<link href=\"../assets/css/fullscreen.css\" rel=\"stylesheet\" class=\"fullscreen\"\n" +
                "type=\"text/css\">\n" +
                "\n" +
                "\n" +
                "<!-- JAVASCRIPT -->\n" +
                "<script src=\"http://www.google.com/jsapi\" type=\"text/javascript\"></script>\n" +
                "<script src=\"../assets/js/android_3p-bundle.js\" type=\"text/javascript\"></script>\n" +
                "<script type=\"text/javascript\">\n" +
                "  var toRoot = \"../\";\n" +
                "  var metaTags = [];\n" +
                "  var devsite = false;\n" +
                "</script>\n" +
                "<script src=\"../assets/js/docs.js?v=2\" type=\"text/javascript\"></script>\n" +
                "\n" +
                "<script>\n" +
                "  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n" +
                "  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n" +
                "  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n" +
                "  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n" +
                "\n" +
                "  ga('create', 'UA-5831155-1', 'android.com');\n" +
                "  ga('create', 'UA-49880327-2', 'android.com', {'name': 'universal'});  // New tracker);\n" +
                "  ga('send', 'pageview');\n" +
                "  ga('universal.send', 'pageview'); // Send page view for new tracker.\n" +
                "</script>\n" +
                "\n" +
                "</head>\n" +
                "\n" +
                "<body class=\"gc-documentation \n" +
                "  develop reference\">\n" +
                "  <a name=\"top\"></a>";
        
        StringBuffer sb = stringBufferLocal.get();
		sb.setLength(0);
		Matcher matcher = REPLACE_PATTERN.matcher(s);
		while(matcher.find()) {
			
		}
		System.out.println(sb.toString());
		
		
//		File docsDir = new File("D:\\Android\\android-sdk\\docs_copy");
//		executor = new ThreadPoolExecutor(5, 5, 0, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>());
//		probe(docsDir);
	}
	
	private static void probe(File file) {
		if(file.isDirectory()) {
			File[] children = file.listFiles();
			if(children != null) {
				for(File child : children) {
					probe(child);
				}
			}
		} else if(file.getPath().endsWith(".html")) {
			dispatchTask(file);
		}
	}
	
	private static void dispatchTask(final File htmlFile) {
		executor.execute(new Runnable() {

			@Override
			public void run() {
				handleHtmlFile(htmlFile);
			}
			
		});
	}
	
	private static void handleHtmlFile(File htmlFile) {
		String fileStr;
		try {
			fileStr = FileUtils.readFileToString(htmlFile, UTF8);
		} catch (IOException e) {
			e.printStackTrace();
			return;
		}
		StringBuffer sb = stringBufferLocal.get();
		sb.setLength(0);
		Matcher matcher = REPLACE_PATTERN.matcher(fileStr);
		while(matcher.find()) {
			//matcher.
		}
		
	}

}
